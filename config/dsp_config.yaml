cores:
  qubit: 7
  coupler: 8

state_disc: y-axis # y-axis or ml
rc: False
pce: False

dac_samples_per_clk: 16
dac_nbits: 16 #per sample

adc_samples_per_clk: 16
adc_nbits: 16 #per sample

dac_outputs: 
  # these can be generate blocks representing assignments to dac channels
  #   expr: <dac_ind> <= <chan_expr>
  #
  #  range is [) like python slices
  #228_1 to 3
  - gen:
      var: i
      range: 0, 3
      expr: i + 1 <= qubit.qdrv[i]  
  #229_0 to 3
  - gen:
      var: i
      range: 0, 4
      expr: i + 4 <= coupler.cdrv[i] + coupler.dc[i]
  #230_0 to 3
  - gen:
      var: i
      range: 3, 7
      expr: i + 5 <= qubit.qdrv[i]  
  #231_0 to 3
  - gen:
      var: i
      range: 4, 8
      expr: i + 8 <= coupler.cdrv[i] + coupler.dc[i]

  #228_0
  - sum:
      dac_ind: 0
      sig_gens: qubit.rdrv

adc_mix_inputs: #227_0
  - gen:
      var: i
      range: 0, 7
      expr: qubit.rdlo[i] <= 0

core_defs:
  qubit:
    instr_mem_depth: 16384
    sig_gens:
      qdrv:
         type: rf
         interp_ratio: 4 # 4-2 GHz, 1-8 GHz
         env_mem_depth: 4096 # x32 bit
         freq_mem_depth: 4096
         delay: 3 # extra delay before output
      rdrv:
        type: rf
        interp_ratio: 16
        env_mem_depth: 4096 # x32 bit
        freq_mem_depth: 4096
        delay: 3
      rdlo:
        type: rf_mix
        interp_ratio: 4
        env_mem_depth: 4096
        freq_mem_depth: 4096
        acc_mem_depth: 1024 # x64

  coupler:
    instr_mem_depth: 16384
    sig_gens:
      cdrv:
        type: rf
        interp_ratio: 4 # 4-2 GHz, 1-8 GHz
        env_mem_depth: 4096 # x32 bit
        freq_mem_depth: 4096
        delay: 3
      dc:
        type: dc_offset
        delay: 3
